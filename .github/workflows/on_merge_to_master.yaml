name: Deploy to EC2

on:
  workflow_dispatch: # Enables manual trigger
  push:
    branches:
      - main # Trigger on push to main branch
env:
  STABLE_DIFFUSION_API_PORT: 7861

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.MOONLITE_AWS_EC2_SSH_KEY }}

      - name: Create .env file
        working-directory: ./
        run: |
          echo "SDAPI_USERNAME=${{ secrets.MOONLITE_SDAPI_USERNAME }}" >> .env
          echo "SDAPI_PASSWORD=${{ secrets.MOONLITE_SDAPI_PASSWORD }}" >> .env

      - name: Copy .env file to EC2 instance
        run: |
          scp -o StrictHostKeyChecking=no -i ${{ secrets.MOONLITE_AWS_EC2_SSH_KEY }} .env ${{ secrets.MOONLITE_AWS_EC2_SSH_USER }}@${{ secrets.MOONLITE_AWS_EC2_SSH_HOST }}:/home/ec2-user/apps/stable-diffusion/

      - name: SSH into EC2 and deploy the app
        run: |
          ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=60 -o StrictHostKeyChecking=no ${{ secrets.MOONLITE_AWS_EC2_SSH_USER }}@${{ secrets.MOONLITE_AWS_EC2_SSH_HOST }} << 'EOF'
            cd /home/ec2-user/apps
            
            # Terminate any running instances of the Python app
            PORT=${{ env.STABLE_DIFFUSION_API_PORT }}
            PID=$(lsof -t -i:$PORT)
            if [ ! -z "$PID" ]; then
              echo "Terminating process running on port $PORT with PID $PID..."
              kill -9 $PID
            else
              echo "No process is running on port $PORT."
            fi

            # Check if the stable-diffusion-webui folder exists
            if [ ! -d "stable-diffusion-webui" ]; then
              echo "Cloning stable-diffusion-webui from GitHub..."
              git clone git@github.com:Moonlite-Media/stable-diffusion-webui.git
            else
              echo "stable-diffusion-webui folder already exists, pulling the latest changes..."
              cd stable-diffusion-webui
              git pull origin master
            fi
            
            conda activate myenv

            # Install missing Python packages
            pip install insightface

            # Navigate to the models folder and download required files
            cd models
            # Example: Downloading a model file (adjust the URL)
            # if [ ! -f model_file_name ]; then
            #   wget https://huggingface.co/stabilityai/stable-diffusion-2/resolve/main/768-v-ema.safetensors
            # fi

            # Navigate to the extensions folder and clone repos
            cd ../extensions
            if [ ! -d "sd-webui-loractl/.git" ]; then
              git clone https://github.com/cheald/sd-webui-loractl.git
            fi

            if [ ! -d "sd-webui-controlnet/.git" ]; then
              git clone https://github.com/Mikubill/sd-webui-controlnet
            fi
            
            if [ ! -d "sd-webui-deforum/.git" ]; then
              git clone https://github.com/deforum-art/sd-webui-deforum
            fi

            # Return to the main project directory
            cd ..
            
            # Run the application in the background using nohup
            nohup python launch.py --nowebui --deforum-api --listen --api --port $PORT > nohup.out 2>&1 &
            
            # Detach from the SSH session to prevent hanging
            exit
          EOF
